# PyEEG Snakemake Pipeline Configuration
# =====================================

# Core directories and paths
base_folder: "/mnt/isilon/marsh_single_unit/PythonEEG"
data_parent_folder: "/mnt/isilon/marsh_single_unit/PythonEEG Data Bins/Sox5/Dr. Lefebvre Project"
temp_directory: "/scr1/users/dongjp"

# Results directory structure
results_dir: "results"
wars_dir: "results/wars"
wars_quality_filtered_dir: "results/wars_quality_filtered"
wars_standardized_dir: "results/wars_standardized"
wars_fragment_filtered_dir: "results/wars_fragment_filtered"
wars_channel_filtered_manual_dir: "results/wars_channel_filtered_manual"
wars_channel_filtered_lof_dir: "results/wars_channel_filtered_lof"
wars_zeitgeber_dir: "results/wars_zeitgeber"
temporal_heatmaps_dir: "results/temporal_heatmaps"
diagnostic_figures_dir: "results/diagnostic_figures"
flattened_wars_dir: "results/wars_flattened"
flattened_wars_manual_dir: "results/wars_flattened_manual"
flattened_wars_lof_dir: "results/wars_flattened_lof"
filtering_comparison_dir: "results/filtering_comparison_plots"

# Sample configuration
samples:
  # Sample metadata file path
  samples_file: "config/samples.json"
  
  # Quality filtering parameters
  quality_filter:
    exclude_unknown_genotypes: true
    exclude_bad_animaldays: true

# Analysis parameters
analysis:
  # WAR generation parameters
  war_generation:
    mode: "nest"
    assume_from_number: true
    skip_days: ["bad"]
    lro_kwargs:
      mode: "bin"
      multiprocess_mode: "dask"
      overwrite_rowbins: false

  # WAR standardization parameters (channel setup applied before filtering)
  standardization:
    channel_reorder: ["LMot", "RMot", "LBar", "RBar", "LAud", "RAud", "LVis", "RVis"]
    use_abbrevs: true
    add_unique_hash: false  # Whether to add unique hash during standardization
    unique_hash_length: 4   # Length of unique hash if enabled

  # Fragment filtering configuration (temporal artifact removal)
  fragment_filter_config:
    logrms_range:
      z_range: 3
    high_rms:
      max_rms: 500
    low_rms:
      min_rms: 50
    high_beta:
      max_beta_prop: 0.4
    # morphological_smoothing:
    #   smoothing_seconds: 300  # Uncomment to enable temporal smoothing

  # Channel filtering configurations (spatial artifact removal)
  channel_filter_config:
    manual:
      reject_channels_by_session: false  # Use per-session bad channels
      reject_channels: ["LHip", "RHip"]  # List of channels to reject globally
      min_valid_channels: 3
    lof:
      reject_lof_threshold: 2.5
      reject_channels: []  # List of channels to reject globally
      min_valid_channels: 3

  # Data aggregation parameters (applied after filtering)
  aggregation:
    groupby: ["animalday", "isday"]  # Time window grouping for aggregation

  # Zeitgeber time processing parameters
  zeitgeber:
    features: ["logpsdband", "logrms", "zpcorr"]  # Features to extract for zeitgeber analysis
    time_aggregation_minutes: 60  # Time window for aggregation (60 = hourly)

  # Zeitgeber temporal plots parameters
  zeitgeber_plots:
    features: ["logpsdband", "logrms", "zpcorr"]  # Features to plot in temporal analysis
    baseline_hours: 12  # Hours to use for baseline correction (first N hours)
    figure_format: "png"  # Figure output format: png, tif, pdf, svg
    data_format: "csv"    # Data export format: csv, pkl
    dpi: 300             # Figure resolution
    figsize: [20, 20]    # Figure size [width, height]

  # ExperimentPlotter statistical figures parameters
  ep_figures:
    features: ["pcorr", "zpcorr", "cohere", "zcohere", "logpsdfrac", "logpsdband", "psd", "normpsd"]
    exclude_features: ["nspike", "lognspike"]  # Features to exclude from ExperimentPlotter
    figure_format: "png"  # Figure output format: png, tif, pdf, svg
    data_format: "csv"    # Data export format: csv, pkl
    dpi: 300             # Figure resolution

  # ExperimentPlotter heatmap parameters  
  ep_heatmaps:
    matrix_features: ["cohere", "imcoh", "zcohere", "zimcoh", "pcorr", "zpcorr"]
    baseline_type: "sex_specific"  # "sex_specific" (e.g., MWT, FWT) or "global" (single baseline)
    figure_format: "png"  # Figure output format: png, tif, pdf, svg
    data_format: "pkl"    # Data export format: csv, pkl (heatmaps typically use pkl)
    dpi: 300             # Figure resolution

  # LOF accuracy evaluation parameters
  lof_evaluation:
    threshold_range:
      min: 0.5            # Minimum LOF threshold to test
      max: 4.0            # Maximum LOF threshold to test
      step: 0.05           # Step size for threshold testing
    # Subset of channels to evaluate (e.g., exclude hippocampal channels)
    evaluation_channels: ["LMot", "RMot", "LBar", "RBar", "LAud", "RAud", "LVis", "RVis"]
    figure_format: "png"  # Figure output format: png, tif, pdf, svg
    data_format: "csv"    # Data export format: csv, pkl
    dpi: 300             # Figure resolution

  # Filtering comparison parameters (manual vs LOF channel filtering)
  filtering_comparison:
    enabled: true
    lof_threshold: 2.0
    features_to_compare: ["delta", "rms", "beta", "logpsdband", "pcorr", "cohere"]
    plot_types: ["feature_scatter", "channel_impact", "animal_correlation"]
    baseline_type: "manual"  # Use manual filtering as baseline
    figure_format: "png"
    data_format: "csv"
    dpi: 300

  # Figure generation parameters
  figures:
    coherecorr_spectral:
      figsize: [20, 5]
      score_type: "z"
    
    psd_histogram:
      figsize: [10, 4]
      avg_channels: true
      plot_type: "loglog"
    
    psd_spectrogram:
      figsize: [20, 4]
      mode: "none"
    
    # Temporal heatmap parameters - configurable features with individual parameters
    temporal_heatmaps:
      features:
        rms:
          figsize: [10, 3]
          cmap: "viridis"
          norm_type: "fixed"
          norm_params: 
            vmin: 50
            vmax: 300
        psdslope:
          figsize: [10, 3] 
          cmap: "viridis"
          norm_type: "fixed"
          norm_params:
            vmin: -3
            vmax: 0
        zpcorr:
          figsize: [10, 3]
          cmap: "RdBu_r"
          norm_type: "centered"
          norm_params:
            halfrange: 1.5

# SLURM cluster configuration
cluster:
  war_generation:
    time: "3h"
    mem_mb: 70_000
    nodes: 1
    threads: 10
    interface: null

  war_quality_filter:
    time: "2h"
    mem_mb: 4_000
    nodes: 1
    threads: 1
    interface: null

  diagnostic_figures:
    time: "2h"
    mem_mb: 30_000
    nodes: 1
    threads: 4
    interface: null

  war_fragment_filter:
    time: "2h"
    mem_mb: 30_000
    nodes: 1
    threads: 1
    interface: null

  war_flattening:
    time: "2h"
    mem_mb: 30_000
    nodes: 1
    threads: 1
    interface: null

  war_zeitgeber:
    time: "2h"
    mem_mb: 200_000
    nodes: 1
    threads: 15
    interface: null

  ep_figures:
    time: "2h"
    mem_mb: 50_000
    nodes: 1
    threads: 8
    interface: null

  ep_heatmaps:
    time: "2h"
    mem_mb: 50_000
    nodes: 1
    threads: 4
    interface: null

  zeitgeber_plots:
    time: "2h"
    mem_mb: 20_000
    nodes: 1
    threads: 2
    interface: null

  lof_evaluation:
    time: "2h"
    mem_mb: 10_000
    nodes: 1
    threads: 4
    interface: null

  notebook:
    time: "1h"
    mem_mb: 20_000
    nodes: 1
    threads: 2
    interface: null

  war_standardize:
    time: "1h"
    mem_mb: 20_000
    nodes: 1
    threads: 1
    interface: null

  war_channel_filtering:
    time: "1h"
    mem_mb: 20_000
    nodes: 1
    threads: 1
    interface: null

  filtering_comparison:
    time: "2h"
    mem_mb: 10_000
    nodes: 1
    threads: 4
    interface: null

# Logging configuration
logging:
  level: "DEBUG"
  format: "%(asctime)s - %(levelname)s - %(message)s"

# Feature exclusions for plotting
plotting:
  exclude_features: ["nspike", "lognspike"]
  catplot_params:
    showfliers: false
  plot_kinds: ["box", "swarm", "point"]